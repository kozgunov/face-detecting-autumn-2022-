import cv2
import numpy as np
import os

face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')

array = []
DIR = r'C:\Users\user\Desktop\ViolaJonesTest\kaggle\dataset1\dataset'
stop_sign = 0
for i in os.listdir('C:/Users/user/Desktop/ViolaJonesTest/kaggle/dataset1/dataset'):
    stop_sign += 1
    if stop_sign < 1000:
        array.append(i)

features = []
labels = []



def create_train():
    for person in array:
        path = os.path.join(DIR, person)
        label = array.index(person)

        for img in os.listdir(path):
            img_path = os.path.join(path, img)

            img_array = cv2.imread(img_path)
            if img_array is None:
                continue

            gray = cv2.cvtColor(img_array, cv2.COLOR_BGR2GRAY)

            faces_rect = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=4)

            for (x, y, w, h) in faces_rect:
                faces_roi = gray[y:y + h, x:x + w]
                features.append(faces_roi)
                labels.append(label)


create_train()
print('Training done ---------------')

features = np.array(features, dtype='object')
labels = np.array(labels)

face_recognizer = cv2.face.LBPHFaceRecognizer_create()

# Train the Recognizer on the features list and the labels list
face_recognizer.train(features, labels)

face_recognizer.save('face_trained.yml')
# np.save('features.npy', features)
# np.save('labels.npy', labels)

print("array: ", len(array))
print("feature: ", len(features))
